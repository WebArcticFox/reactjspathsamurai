{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/HeaderProfile/HeaderProfile.module.css","components/Profile/ProfileInfo/AboutUser/AboutUser.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInfo/HeaderProfile/HeaderProfile.jsx","components/Profile/ProfileInfo/AboutUser/AboutUser.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","HeaderProfile","React","memo","props","className","style","top_header_thumb","src","profile","photos","large","notFoundPhoto","alt","top_header_author","author_thumb","small","author_content","author_name","fullName","country","lookingForAJobDescription","AboutUser","profile__content","aboutMe","lookingForAJob","contacts","facebook","href","website","vk","twitter","instagram","youtube","github","mainLink","Post","profile__posts_item","profile__posts_img","post__content","profile__posts_item_auth","name","message","post__like","likeCount","maxLength10","maxLengthCreate","SendPostReduxForm","reduxForm","form","onSubmit","handleSubmit","comment_form","Field","placeholder","component","TextArea","comment_form__text_area","validate","required","comment_form__input","Posts","profile__posts","postArray","map","post","postH1","postText","postId","addPost","PostsContainer","connect","state","profilePage","newPostText","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusHooks","useState","editMode","setEditMode","status","textValue","setTextValue","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","Profile","container","content","Preloader","ProfileContainer","userId","this","match","params","currentUserId","getProfile","getStatus","isFetching","Component","compose","auth","id","withRouter"],"mappings":"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","file":"static/js/3.7164ac89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"container\":\"Profile_container__1Z5Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_header_thumb\":\"HeaderProfile_top_header_thumb__4n-9P\",\"top_header_author\":\"HeaderProfile_top_header_author__34MvD\",\"author_thumb\":\"HeaderProfile_author_thumb__2q3Q7\",\"author_name\":\"HeaderProfile_author_name__3Oh53\",\"country\":\"HeaderProfile_country__1rCU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__content\":\"AboutUser_profile__content__2hxwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__posts\":\"Posts_profile__posts__3UfWn\",\"comment_form\":\"Posts_comment_form__2f9Pi\",\"comment_form__text_area\":\"Posts_comment_form__text_area__2PG9X\",\"comment_form__input\":\"Posts_comment_form__input__2mrmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__posts\":\"Post_profile__posts__1Py9l\",\"profile__posts_item\":\"Post_profile__posts_item__21ptk\",\"post__content\":\"Post_post__content__OQBKj\",\"profile__posts_item_auth\":\"Post_profile__posts_item_auth__2kkyJ\",\"profile__posts_img\":\"Post_profile__posts_img__IUMXA\",\"post__like\":\"Post_post__like__2jB_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__content\":\"ProfileStatus_profile__content__9Fpkc\",\"comment_form\":\"ProfileStatus_comment_form__2oieR\",\"status\":\"ProfileStatus_status__3vAMm\",\"comment_form__text_area\":\"ProfileStatus_comment_form__text_area__2JLvb\",\"comment_form__input\":\"ProfileStatus_comment_form__input__2zKN4\"};","import style from \"./HeaderProfile.module.css\";\nimport React from \"react\";\nimport notFoundPhoto from \"../../../../assets/images/not_found_photo.svg\";\n\nconst HeaderProfile = React.memo(props => {\n    return(\n        <div>\n            <div className={style.top_header_thumb}>\n                <img src={props.profile.photos.large? props.profile.photos.large: notFoundPhoto} alt='some value' />\n            </div>\n            <div className={style.top_header_author}>\n                <img className={style.author_thumb} src={props.profile.photos.small? props.profile.photos.small: notFoundPhoto} alt=\"author\" />\n                <div className={style.author_content}>\n                    <p className={style.author_name}>{props.profile.fullName}</p>\n                    <div className={style.country}>{props.profile.lookingForAJobDescription}</div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default HeaderProfile;","import style from \"./AboutUser.module.css\";\nimport React from \"react\";\n\nconst AboutUser = (props) => {\n    return (\n        <div className={style.profile__content}>\n            <p>Name: {props.profile.fullName}</p>\n            <p>About me: {props.profile.aboutMe}</p>\n            <p>I'm looking job: {props.profile.lookingForAJob? 'Yes': 'No'}</p>\n            <br />\n            <p>My social link:</p>\n            {props.profile.contacts.facebook? <p>My Facebook: <a href={props.profile.contacts.facebook}>{props.profile.contacts.facebook}</a></p>:''}\n            {props.profile.contacts.website? <p>My website: <a href={props.profile.contacts.website}>{props.profile.contacts.website}</a></p>:''}\n            {props.profile.contacts.vk? <p>My Facebook: <a href={props.profile.contacts.vk}>{props.profile.contacts.vk}</a></p>:''}\n            {props.profile.contacts.twitter? <p>My twitter: <a href={props.profile.contacts.twitter}>{props.profile.contacts.twitter}</a></p>:''}\n            {props.profile.contacts.instagram? <p>My instagram: <a href={props.profile.contacts.instagram}>{props.profile.contacts.instagram}</a></p>:''}\n            {props.profile.contacts.youtube? <p>My youtube: <a href={props.profile.contacts.youtube}>{props.profile.contacts.youtube}</a></p>:''}\n            {props.profile.contacts.github? <p>My github: <a href={props.profile.contacts.github}>{props.profile.contacts.github}</a></p>:''}\n            {props.profile.contacts.mainLink? <p>My E-mail: <a href={props.profile.contacts.mainLink}>{props.profile.contacts.mainLink}</a></p>:''}\n        </div>\n    )\n}\n\nexport default AboutUser;","import style from \"./Post.module.css\";\nimport React from \"react\";\n\nconst Post = (props) => {\n    return(\n        <div className={style.profile__posts_item}>\n            <div>\n                <img className={style.profile__posts_img} alt=\"some value\" src=\"https://st.fl.ru/users/he/heikun/foto/f_293609fee65839c2.jpeg\" />\n            </div>\n            <div className={style.post__content}>\n                <p className={style.profile__posts_item_auth}>{props.name}</p>\n                <p>{props.message}</p>\n            </div>\n            <div>\n                <button className={style.post__like}>{props.likeCount} | Like</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import style from \"./Posts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreate, required} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/FormsItem/FormsItem\";\n\nconst maxLength10 = maxLengthCreate(10)\n\n\nconst formSendPost = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={style.comment_form}>\n            <div>\n                <Field placeholder={\"New post\"} name={\"postText\"} component={TextArea} className={style.comment_form__text_area} validate={[required, maxLength10]} />\n            </div>\n            <button className={style.comment_form__input}>Post Comment</button>\n        </form>\n    )\n}\n\nconst SendPostReduxForm = reduxForm({form: 'sendPost'})(formSendPost)\n\nconst Posts = (props) => {\n    return (\n        <div>\n            <div className={style.profile__posts}>\n                {props.postArray.map( post => <Post key={post.postId} name={post.postH1} message={post.postText} likeCount={post.likeCount} /> )}\n            </div>\n            <SendPostReduxForm onSubmit={props.addPost} />\n        </div>\n    )\n}\n\nexport default Posts;","import Posts from \"./Posts\";\nimport {addPost} from \"../../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        postArray: state.profilePage.postArray,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps,{addPost})(Posts);\n\nexport default PostsContainer;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import style from \"./ProfileStatus.module.css\";\nimport React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [textValue, setTextValue] = useState(props.status)\n\n    useEffect( () => {\n        setTextValue(props.status)\n    },[props.status] )\n\n    const onEditMode = () => {\n        setEditMode(true)\n    }\n\n    const offEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(textValue)\n    }\n\n    return (\n        <div className={style.profile__content}>\n            {!editMode\n                ? <p className={style.status}\n                     onDoubleClick={onEditMode}>{!props.status ? \"Need set status\" : props.status}</p>\n                : <div className={style.comment_form}>\n                    <div>\n                        <input onChange={ (e)=> setTextValue(e.currentTarget.value)} autoFocus={true} onBlur={offEditMode}\n                               className={style.comment_form__text_area} value={textValue}/>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n\n}\n\nexport default ProfileStatusHooks;\n\n","import React from \"react\";\nimport style from './Profile.module.css';\nimport HeaderProfile from \"./ProfileInfo/HeaderProfile/HeaderProfile\";\nimport AboutUser from \"./ProfileInfo/AboutUser/AboutUser\";\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport Preloader from \"../common/Prealoader/Preloader\";\nimport ProfileStatusHooks from \"./ProfileInfo/ProfileStatus/ProfileStatusHooks\";\n\nconst Profile = (props) => {\n\n    if(!props.profile) {\n        return (<Preloader />)\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.content}>\n                <HeaderProfile profile={props.profile} />\n            </div>\n            <div className={style.content}>\n                <AboutUser profile={props.profile} />\n            </div>\n            <div className={style.content}>\n                <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\n            </div>\n            <div className={style.content}>\n                <PostsContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"../common/Prealoader/Preloader\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId? this.props.match.params.userId: this.props.currentUserId\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render () {\n        return (\n            <>\n            {this.props.isFetching ? <Preloader /> : <Profile {...this.props} />}\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        profile: state.profilePage.profile,\n        isFetching: state.profilePage.isFetching,\n        currentUserId: state.auth.id,\n        status: state.profilePage.status\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps,{getProfile,getStatus,updateStatus}),\n    withRouter\n)(ProfileContainer);"],"sourceRoot":""}